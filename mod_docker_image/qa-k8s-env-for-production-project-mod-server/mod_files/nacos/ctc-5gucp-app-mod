server.port=8181

server.bes.max-threads=1000
#server.port=8443
#spring.thymeleaf.cache=false
#server.ssl.key-store=zenithKS
#server.ssl.key-password=456.com

spring.thymeleaf.prefix=classpath:/static
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false


# 数据库访问配置
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=50
spring.datasource.hikari.maximum-pool-size=150
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.pool-name=DatebookHikariCP


#hibernate配置 
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
spring.jpa.properties.hibernate.show_sql=false

#mysql start
#spring.datasource.hikari.connection-test-query=SELECT 1
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://172.18.9.45:3306/ema_5gucp?useSSL=false&amp;amp;amp;useUnicode=true&amp;amp;amp;characterEncoding=utf8&amp;amp;amp;serverTimezone=Asia/Shanghai&amp;amp;amp;useLocalSessionState=true
#spring.datasource.username=5gucp
#spring.datasource.password=456.com
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect
#mysql end

spring.datasource.hikari.connection-test-query=SELECT 1
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://{{db_url}}?useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useLocalSessionState=true&allowPublicKeyRetrieval=true
spring.datasource.username={{db_username}}
spring.datasource.password={{db_password}}

#sqlserver start
#spring.datasource.hikari.connection-test-query=SELECT 1
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.url=jdbc:sqlserver://172.18.2.88:1433;Databasename=zow_ema8_test
#spring.datasource.username=zow_ema8_test
#spring.datasource.password=zow_ema8_test
#spring.jpa.properties.hibernate.dialect=com.ema.core.common.sqlserver.DahanSQLServerDialect
#sqlserver end


#oracle start
#spring.datasource.hikari.connection-test-query=select 1 from dual
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@172.18.2.224:1521:CTCDB
#spring.datasource.username=std_ema80
#spring.datasource.password=dahan123
#spring.jpa.properties.hibernate.dialect=com.dahantc.ema.common.dialect.GroupOracleDialect
#oracle end

logging.config=classpath:log4j2.xml
logging.level.org.springframework.boot.autoconfigure: info 


#Redis的配置
#配置redis开关：true代表打开,false代表关闭
redis.available=true

#redis.host=172.18.9.45
#redis.port=6379
#redis.password=dahantc.com
#redis.timeout=3000
#以下是单节点配置方式
redisson.singleServerConfig.idleConnectionTimeout=10000
redisson.singleServerConfig.connectTimeout=10000
redisson.singleServerConfig.timeout=3000
redisson.singleServerConfig.retryAttempts=3
redisson.singleServerConfig.retryInterval=1500
redisson.singleServerConfig.password={{redis_password}}
redisson.singleServerConfig.subscriptionsPerConnection=5
#redisson.singleServerConfig.clientName=redis.com
redisson.singleServerConfig.address={{redis_address}}
redisson.singleServerConfig.subscriptionConnectionMinimumIdleSize=1
redisson.singleServerConfig.subscriptionConnectionPoolSize=50
redisson.singleServerConfig.connectionMinimumIdleSize=32
redisson.singleServerConfig.connectionPoolSize=64
redisson.singleServerConfig.database=0
redisson.singleServerConfig.dnsMonitoringInterval=5000
redisson.threads=0
redisson.nettyThreads=0


# redis.available 为false时，需要排查Redisson自动配置类， 开启配置
# spring.autoconfigure.exclude=org.redisson.spring.starter.RedissonAutoConfiguration
# redisson配置相关参数【Yaml/property转换网站：https://toyaml.com】
# 以下是集群模式配置方式
#redisson.clusterServersConfig.idleConnectionTimeout=10000
#redisson.clusterServersConfig.connectTimeout=10000
#redisson.clusterServersConfig.timeout=3000
#redisson.clusterServersConfig.retryAttempts=3
#redisson.clusterServersConfig.retryInterval=1500
#redisson.clusterServersConfig.password=null
#redisson.clusterServersConfig.subscriptionsPerConnection=100
#redisson.clusterServersConfig.clientName=null
#redisson.clusterServersConfig.slaveConnectionMinimumIdleSize=320
#redisson.clusterServersConfig.slaveConnectionPoolSize=640
#redisson.clusterServersConfig.masterConnectionMinimumIdleSize=320
#redisson.clusterServersConfig.masterConnectionPoolSize=640
#redisson.clusterServersConfig.readMode=MASTER_SLAVE
#redisson.clusterServersConfig.nodeAddresses[0]=redis://172.18.9.68:7011
#redisson.clusterServersConfig.nodeAddresses[1]=redis://172.18.9.68:7012
#redisson.clusterServersConfig.nodeAddresses[2]=redis://172.18.9.68:7013
#redisson.clusterServersConfig.nodeAddresses[3]=redis://172.18.9.68:7014
#redisson.clusterServersConfig.nodeAddresses[4]=redis://172.18.9.68:7015
#redisson.clusterServersConfig.nodeAddresses[5]=redis://172.18.9.68:7016
#redisson.clusterServersConfig.scanInterval=1000
#redisson.threads=0
#redisson.nettyThreads=0

#批量从指定队列RPOP最大1000个对象(最大数可配置)
redis.popRedisSize=1000
#最大空闲连接数
redis.maxIdle=30
#最大连接数
redis.maxTotal=2000
#连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
redis.blockWhenExhausted=true
#获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
redis.maxWaitMillis=3000
#逐出连接的最小空闲时间
redis.minEvictableIdleTimeMillis=60000
#在获取连接的时候检查有效性
redis.testOnBorrow=true
#允许使用的库
redis.userdb=0,1,2,8,3,4,9,5

management.endpoint.enabled = false
management.endpoints.web.exposure.include=memoryQueue,channelSmsCount,smsCount,channel,health,metrics,queue,systemTask,timeSms,fsendTask,redisMemory,systemMemory
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always

#上传文件临时目录
server.bes.basedir=/home/tong/temp

#配置true实现二次密码校验,配置false或者不配置都不实现二次密码校验
security.needPwdCheck=true

#应用服务白名单,多个用逗号分隔;不配置即不校验请求URL的合法性
serverUrl=
#测试模式  1：测试模式,不校验登录验证码
security.isTestMode=1

################公钥相关配置##############
# 系统唯一标记
utry.subject=dahantc_subject
# 公钥别名
utry.publicAlias=publicCert
# 密钥库密码
utry.storePwd=dahantc_33333
# 公钥库文件路径，相对路径
utry.publicStorePath=/license/publicCerts.keystore

# oss配置
#标识启用minio文件服务器 如果不使用minio请务必用NFS替换掉下面的oss.type 即 oss.type=NFS, 此时使用的就是网络文件系统作为存储媒介
oss.type=MINIO
# minio相关配置
#minio服务器地址
minio.endpoint={{minio_api_ur}}
#minio服务器访问key
minio.accessKey={{minio_accessKey}}
#minio服务器访问秘钥
minio.secretKey={{minio_secretKey}}

#扫描配置表间隔时间，用于设置app服务监听通道插件及通道状态变更的时间间隔。单位：毫秒
AppConfigListener.sleepTime=10000


# 资源配置文件的口令、账号是否加密存储，true：是，false：否，当前支持加密数据库账号密码，MinIO accessKey和secretKey，Redis密码，必须同时加密或者同时不加密
spring.datasource.pEncrypt=false
# 密钥
spring.datasource.secretKey=lbUlU0QghKfzKIqH

# 主动推送待转发状态报告相关配置
# 是否开启主动推送功能，true/false
active.push.on=true
# 主动推送线程池核心线程数（默认为：cpu*2）
active.push.corePoolSize=
# 主动推送线程池最大线程数（默认为：cpu*2+1），不可小于核心线程数
active.push.maximumPoolSize=
# 主动推送线程池等待队列大小，默认值为(coreSizePool/taskCost)*responseTime，taskCost为推送网络请求时间，默认值为0.1，responseTime为系统允许最大响应时间，默认为1
active.push.queueCapacity=
# 线程空闲时间，单位：s（默认为：60）
active.push.keepAliveTime=60

spring.cache.type=caffeine
# 最大文件缓存容量大小，单位：MB，默认200
spring.cache.maxCacheFileSize=200